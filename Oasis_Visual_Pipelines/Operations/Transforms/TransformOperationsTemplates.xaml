<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:Oasis_Visual_Pipelines.Controls"
	xmlns:converters="clr-namespace:Oasis_Visual_Pipelines.Converters"
	xmlns:enums="clr-namespace:Oasis_Visual_Pipelines.Enums"
	xmlns:local="clr-namespace:Oasis_Visual_Pipelines.Operations"
	xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes">
	<DataTemplate DataType="{x:Type local:ChangeCaseBlockDiagramOperation}">
		<DataTemplate.Resources>
			<converters:IsEqualConverter x:Key="IsEqualConverter" />
		</DataTemplate.Resources>
		<DockPanel>
			<TextBlock
				DockPanel.Dock="Top"
				Text="{Binding OperationTitle}"
				TextWrapping="Wrap" />

			<StackPanel Orientation="Horizontal">
				<RadioButton
					Margin="2"
					Content="{material:PackIcon Kind=FormatLowercase}"
					IsChecked="{Binding TextCaseChoice, Converter={StaticResource IsEqualConverter}, ConverterParameter={x:Static local:TextCase.LowerCase}}"
					Style="{StaticResource MaterialDesignChoiceChipRadioButton}" />
				<RadioButton
					Margin="2"
					Content="{material:PackIcon Kind=FormatUppercase}"
					IsChecked="{Binding TextCaseChoice, Converter={StaticResource IsEqualConverter}, ConverterParameter={x:Static local:TextCase.UpperCase}}"
					Style="{StaticResource MaterialDesignChoiceChipRadioButton}" />
				<RadioButton
					Margin="2"
					Content="{material:PackIcon Kind=FormatLetterCase}"
					IsChecked="{Binding TextCaseChoice, Converter={StaticResource IsEqualConverter}, ConverterParameter={x:Static local:TextCase.TitleCase}}"
					Style="{StaticResource MaterialDesignChoiceChipRadioButton}" />
			</StackPanel>
		</DockPanel>
	</DataTemplate>

	<DataTemplate DataType="{x:Type local:DateTimeOffsetBlockDiagramOperation}">
		<DataTemplate.Resources>
			<converters:EnumValuesItemsSourceConverter x:Key="EnumValuesItemsSourceConverter" />
		</DataTemplate.Resources>
		<DockPanel>
			<TextBlock
				DockPanel.Dock="Top"
				Text="{Binding OperationTitle}"
				TextWrapping="Wrap" />

			<UniformGrid Columns="2">
				<controls:NumericUpDownControl NumberValue="{Binding OffsetValue, Mode=TwoWay}" />
				<ComboBox
					ItemsSource="{Binding Converter={StaticResource EnumValuesItemsSourceConverter}, ConverterParameter={x:Type enums:TimeDateOffset}}"
					SelectedItem="{Binding TimeDateOffset}"
					TextBlock.TextAlignment="Center" />
			</UniformGrid>
		</DockPanel>
	</DataTemplate>

	<DataTemplate DataType="{x:Type local:InsertColumnBlockDiagramOperation}">
		<DockPanel>
			<TextBlock
				DockPanel.Dock="Top"
				Text="{Binding OperationTitle}"
				TextWrapping="Wrap" />

			<material:Card Margin="5" VerticalAlignment="Center">
				<TextBox
					Margin="5"
					VerticalAlignment="Center"
					Text="{Binding ColumnName, UpdateSourceTrigger=PropertyChanged}" />
			</material:Card>
		</DockPanel>
	</DataTemplate>

	<DataTemplate DataType="{x:Type local:MapArrayBlockDiagramOperation}">
		<DockPanel>
			<TextBlock
				DockPanel.Dock="Top"
				Text="{Binding OperationTitle}"
				TextWrapping="Wrap" />

			<UniformGrid VerticalAlignment="Center" Columns="5">
				<material:PackIcon
					Grid.Column="0"
					HorizontalAlignment="Center"
					Kind="ApplicationArrayOutline" />
				<material:PackIcon
					Grid.Column="1"
					HorizontalAlignment="Center"
					Kind="ArrowRight" />
				<material:PackIcon
					Grid.Column="2"
					HorizontalAlignment="Center"
					Kind="SourceMerge" />
				<material:PackIcon
					Grid.Column="3"
					HorizontalAlignment="Center"
					Kind="ArrowRight" />
				<material:PackIcon
					Grid.Column="4"
					HorizontalAlignment="Center"
					Kind="ApplicationArrayOutline" />
			</UniformGrid>
		</DockPanel>
	</DataTemplate>

	<DataTemplate DataType="{x:Type local:RenameColumnBlockDiagramOperation}">
		<DockPanel>
			<TextBlock
				DockPanel.Dock="Top"
				Text="{Binding OperationTitle}"
				TextWrapping="Wrap" />

			<material:Card>
				<UniformGrid Margin="5" Rows="2">
					<ComboBox
						MinHeight="24"
						ItemsSource="{Binding ValidColumns}"
						SelectedItem="{Binding SelectedColumn}" />
					<TextBox Text="{Binding NewColumnName, UpdateSourceTrigger=PropertyChanged}" />
				</UniformGrid>
			</material:Card>
		</DockPanel>
	</DataTemplate>

	<DataTemplate DataType="{x:Type local:ReplaceStringBlockDiagramOperation}">
		<DockPanel>
			<TextBlock
				DockPanel.Dock="Top"
				Text="{Binding OperationTitle}"
				TextWrapping="Wrap" />

			<material:Card>
				<StackPanel Margin="5">
					<TextBox
						material:HintAssist.Hint="Replace:"
						material:TextFieldAssist.PrefixText="Replace:"
						Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" />
					<TextBox
						material:HintAssist.Hint="With:"
						material:TextFieldAssist.PrefixText="With:"
						Text="{Binding ReplaceText, UpdateSourceTrigger=PropertyChanged}" />
				</StackPanel>
			</material:Card>
		</DockPanel>
	</DataTemplate>

	<DataTemplate DataType="{x:Type local:SplitStringBlockDiagramOperation}">
		<DockPanel>
			<TextBlock
				DockPanel.Dock="Top"
				Text="{Binding OperationTitle}"
				TextWrapping="Wrap" />

			<material:Card>
				<TextBox Margin="5" Text="{Binding SplitString, UpdateSourceTrigger=PropertyChanged}" />
			</material:Card>
		</DockPanel>
	</DataTemplate>

	<DataTemplate DataType="{x:Type local:TrimStringBlockDiagramOperation}">
		<DockPanel>
			<TextBlock
				DockPanel.Dock="Top"
				Text="{Binding OperationTitle}"
				TextWrapping="Wrap" />

			<UniformGrid VerticalAlignment="Center" Columns="5">
				<material:PackIcon
					Grid.Column="2"
					HorizontalAlignment="Center"
					Kind="FormatQuoteClose" />
				<material:PackIcon
					Grid.Column="1"
					HorizontalAlignment="Center"
					Kind="ArrowRight" />
				<material:PackIcon
					Grid.Column="2"
					HorizontalAlignment="Center"
					Kind="Scissors" />
				<material:PackIcon
					Grid.Column="3"
					HorizontalAlignment="Center"
					Kind="ArrowRight" />
				<material:PackIcon
					Grid.Column="2"
					HorizontalAlignment="Center"
					Kind="FormatQuoteClose" />
			</UniformGrid>
		</DockPanel>
	</DataTemplate>

	<DataTemplate DataType="{x:Type local:UpdateColumnBlockDiagramOperation}">
		<DockPanel>
			<TextBlock
				DockPanel.Dock="Top"
				Text="{Binding OperationTitle}"
				TextWrapping="Wrap" />

			<material:Card>
				<ComboBox
					Margin="5"
					VerticalAlignment="Center"
					ItemsSource="{Binding ValidColumns}"
					SelectedItem="{Binding ColumnName}" />
			</material:Card>
		</DockPanel>
	</DataTemplate>
</ResourceDictionary>